name: Release

on:
    push:
      tags:
        - 'v*'

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: write
  actions: write

jobs:
  release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest git tag
        id: get_version
        shell: bash
        run: |
          if git describe --tags --abbrev=0 2>/dev/null; then
            VERSION=$(git describe --tags --abbrev=0)
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Git
        shell: bash
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/ylongwang2782/WhtsViewer.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync version from git tag to package.json
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          VERSION_NO_V=${VERSION#v}
          echo "Updating package.json version to $VERSION_NO_V"
          npm version --no-git-tag-version $VERSION_NO_V
      
      - name: Build Application
        run: |
          npm run build
          npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: "Release ${{ steps.get_version.outputs.version }}"
          generate_release_notes: true
          files: |
            dist_electron/*.exe
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}